@startuml

class Core {
	- HeightMap hills;
	- Image2D hillDetails;
	- Image2D[8] surfaceNormalMaps;
	- Image2D surfaceMask0;
	- Image2D surfaceMask1;
	- Plant[] plants;
	- Tmp tmp; 
	- DataContext context;
	- function<Core*, Tmp*, DataContext*>[] genSteps;
	- UI ui;
	+ void bindUI();
	+ void generate();
}

class DataContext {
	- DataView[] datas;
	- bool saved;
	- bool renderRebuild;
	+ void mangeDatas(...);
	+ bool isSaved();
}

class Data {
	- size_t size;
	- void* data;
	+ void mallocData(...);
}

class DataView {
	- List<Data> history;
	- Data data;
	- string name;
	- Type type;
	- DataContext* context;
	+ void change(...)
	+ <type> to<Type>()
	+ void undo()
	+ void redo()
}

class UI {
	- DataContext* data;
	+ Load(Core* core)
	+ popInfo(...)
	+ popConfirm(...)
	+ popPrompt(...)
	+ popExit(...)
	+ popOpen(...)
}

class Tmp {
	... (编译工具自动生成)
}

class Plant {
	+ vec3 position;
	+ vec4 quaternions;
	+ vec4 scale;
	+ Obj3D mesh;
}

class HeightMap {
	+ uint mapWidth;
	+ uint mapHeight;
	+ float[][] data;
	+ float width;
	+ float height;
	+ float length;
}

class Image2D {
	...
}

class Obj3D {
	...
}

DataView ..> Data
DataView --* DataContext
HeightMap --o Core
Image2D --o Core
Plant --* Core
Tmp --o Core
DataContext --o Core
UI --o Core
Plant ..> Obj3D

note top of UI: self.data != nullptr
note bottom of DataContext: { n | n = x.name, x in datas }.size == datas.size
note right of DataView: void change(...) \n post: self.context.saved = false
note top of DataView: self in self.context


@enduml